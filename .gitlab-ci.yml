image: bitnami/nuxt-ci-runner

stages:
  - test
  - build
  - review
  - deploy

variables:
  NODE_ENV: production
  GIT_STRATEGY: none

cache:
  paths:
    - node_modules/

test:
  stage: test
  tags: [docker]
  before_script:
    - rm -rf ./*
    - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git .
    - npm ci
  script:
    - npm test || echo "No tests configured"

build:
  stage: build
  tags: [docker]
  before_script:
    - rm -rf ./*
    - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git .
    - npm ci
  script:
    - npm run build

review_app:
  stage: review
  tags:
    - docker
  before_script:
    - apt-get update && apt-get install -y rsync
    - rm -rf ./*
    - git clone "http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git" .
    - npm ci
    - npm run build
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan "$REVIEW_HOST" >> ~/.ssh/known_hosts
    - ssh "$DEPLOY_USER@$REVIEW_HOST" "mkdir -p ~/review-apps/$CI_COMMIT_REF_NAME"
    - echo "DEPLOY_USER: $DEPLOY_USER, REVIEW_HOST: $REVIEW_HOST, CI_COMMIT_REF_NAME: $CI_COMMIT_REF_NAME"
    - git remote set-url origin "http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git"
    - git pull --tags origin "$CI_COMMIT_REF_NAME"
  script:
    - rsync -avz -vv .output/ "$DEPLOY_USER@$REVIEW_HOST:~/review-apps/$CI_COMMIT_REF_NAME/"
  environment:
    name: "review/$CI_COMMIT_REF_NAME"
    url: "http://$CI_COMMIT_REF_NAME.$APPS_DOMAIN"
    on_stop: stop_review_app
  rules:
    - if: '$CI_COMMIT_REF_NAME != "main"'

stop_review_app:
  stage: review
  tags:
    - docker
  before_script:
    - rm -rf ./*
    - git clone "http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git" .
  script:
    - ssh "$DEPLOY_USER@$REVIEW_HOST" "rm -rf ~/review-apps/$CI_COMMIT_REF_NAME"
  environment:
    name: "review/$CI_COMMIT_REF_NAME"
    action: stop
  when: manual
  rules:
    - if: '$CI_COMMIT_REF_NAME != "main"'


deploy:
  stage: deploy
  tags: [docker]
  before_script:
    - rm -rf ./*
    - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@51.44.94.84/gitlab/root/nuxt-app.git .
    - npm ci
    - npm run build
    - mkdir -p ~/.ssh && echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $DEPLOY_USER@$DEPLOY_HOST "rm -rf ~/nuxt-app && mkdir ~/nuxt-app"
    - rsync -avz .output/ $DEPLOY_USER@$DEPLOY_HOST:~/nuxt-app/
    - ssh $DEPLOY_USER@$DEPLOY_HOST "pm2 restart nuxt-app || pm2 start ~/nuxt-app/index.mjs --name nuxt-app"
  environment:
    name: production
    url: http://$DEPLOY_HOST:8080
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
