stages:
  - test
  - install
  - build
  - review
  - deploy

variables:
  NODE_ENV: production

cache:
  paths:
    - node_modules/

test:
  stage: test
  tags: [docker]
  image: node:18-alpine
  script:
    - npm ci
    - npm test || echo "No tests configured"

install_dependencies:
  stage: install
  tags: [docker]
  image: node:18-alpine
  script:
    - npm ci

build_nuxt:
  stage: build
  tags: [docker]
  image: node:18-alpine
  script:
    - npm run build
  artifacts:
    paths:
      - .output

review_app:
  stage: review
  tags: [docker]
  image: node:18-alpine
  before_script:
    - apk add --no-cache openssh-client rsync
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $REVIEW_HOST >> ~/.ssh/known_hosts
  script:
    - npm ci
    - npm run build
    - rsync -avz .output/ $DEPLOY_USER@$REVIEW_HOST:/home/$DEPLOY_USER/review-apps/$CI_COMMIT_REF_NAME/
    - ssh $DEPLOY_USER@$REVIEW_HOST "pm2 startOrRestart /home/$DEPLOY_USER/review-apps/$CI_COMMIT_REF_NAME/index.mjs --name review-$CI_COMMIT_REF_NAME"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_COMMIT_REF_NAME.$APPS_DOMAIN
    on_stop: stop_review_app
  only:
    - branches
  except:
    - main

stop_review_app:
  stage: review
  tags: [docker]
  image: node:18-alpine
  variables:
    GIT_STRATEGY: none
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | base64 -d | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $REVIEW_HOST >> ~/.ssh/known_hosts
  script:
    - ssh $DEPLOY_USER@$REVIEW_HOST "pm2 delete review-$CI_COMMIT_REF_NAME || true"
    - ssh $DEPLOY_USER@$REVIEW_HOST "rm -rf /home/$DEPLOY_USER/review-apps/$CI_COMMIT_REF_NAME"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - main
